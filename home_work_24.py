"""
Home work 24.
"""
from pprint import pprint
# 1. Импортируйте `full_dict` из файла `Marvel.py`.
from marvel import full_dict

# 2. Реализуйте ввод от пользователя, который будет принимать цифры через пробел. Разбейте введённую строку на список и примените к каждому элементу `int`, заменяя нечисловые элементы на `None` с помощью `map`.
users_nums = input('Введите числа через пробел: ').split()

nums_list = list(map(lambda num: int(num) if num.isdigit() else None, users_nums))
pprint(f"Пользователь ввел: {nums_list}")

# 3. Перепакуйте `full_dict` в список словарей (с сохранением "id")
list_full_dict = [{"id": film_id, **film} for film_id, film in full_dict.items()]
pprint(f"Список словарей: {list_full_dict}")

# 4. Используйте `filter`, чтобы создать список, содержащий исходные `id` и другие ключи, но только для тех фильмов, `id` которых присутствуют в списке, полученном на предыдущем шаге.
new_list = list(filter(lambda film: film['id'] in nums_list, list_full_dict))
pprint(f"Отфильтрованный список: {new_list}")

# 5. Создайте множество с помощью `set comprehension`, собрав уникальные значения ключа `director` из словаря.
director_set = {film['director'] for film in full_dict.values() if film['director'] != 'TBA'}
pprint(f"Режиссёры: {director_set}")

# 6. С помощью `dict comprehension` создайте копию исходного словаря `full_dict`, преобразовав каждое значение `'year'` в строку. **(Опционально)**
full_dict_year_str = {film_id: {**film, 'year': str(film['year'])} for film_id, film in full_dict.items()}
pprint(f"Словарь с годами в виде строк: {full_dict_year_str}")

# 7. Используйте `filter`, чтобы получить словари, содержащий только те фильмы, которые начинаются на букву `Ч`.
# 8. Отсортируйте словарь `full_dict` по одному параметру с использованием `lambda`, создавая аналогичный по структуре словарь. Обязательно укажите, по какому параметру вы производите сортировку.
# 9. Отсортируйте словарь `full_dict` по двум параметрам с использованием `lambda`, создавая аналогичный по структуре словарь. Обязательно укажите, по каким параметрам вы производите сортировку.
# 10. Напишите однострочник, который отфильтрует и отсортирует `full_dict` с использованием `filter` и `sorted`.
# 11. **Опционально:** Добавьте аннотацию типов для переменных, содержащих результаты, и проверьте код с помощью `mypy`. Оставьте комментарий о успешной проверке.
# 12. Сделайте красивый вывод результатов с использованием `pprint`, добавив подпись о том, какое задание выполнено.

